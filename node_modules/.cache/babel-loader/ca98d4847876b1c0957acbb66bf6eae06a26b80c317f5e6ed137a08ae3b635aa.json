{"ast":null,"code":"import{Component}from\"react\";import{Input,Button,InputGroup,InputGroupText,Modal,ModalBody,ModalFooter,ModalHeader}from\"reactstrap\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class RestartModal extends Component{// Using modal to pop up when the game is over to allow the user to restart or switch users\nconstructor(props){super(props);this.restart=()=>{this.props.restart();// reset defaults\nthis.setState({name:\"\",password:\"\"});};// callback function will make POST request to Login path with username and password in body. Then \n// App.js will get a token to save to its state, which it will use for getting just the user's fastest time for npw\nthis.login=()=>{let result=this.props.login(this.state.username,this.state.password);// Reset username and password after logging in if successful\n// Nada is what login returns if login failed\nif(result===\"Nada\"){console.log(\"login failed\");}this.setState({name:\"\",password:\"\"});};// The e is what gets what's inside the element\nthis.updateUsername=e=>{this.setState({username:e.target.value});};this.updatePassword=e=>{this.setState({password:e.target.value});};this.getTime=()=>{// console.log(\"finalTime: \" + this.props.finalTime);\n// console.log(\"initialTime: \" + this.props.initialTime);\nreturn Math.floor((this.props.finalTime-this.props.initialTime)/1000);};this.state={username:\"\",password:\"\"};}// https://stackoverflow.com/questions/45201351/masking-password-input-in-reactjs\nrender(){return/*#__PURE__*/_jsxs(Modal,{isOpen:this.props.showModal,toggle:this.props.restart,children:[/*#__PURE__*/_jsxs(ModalHeader,{children:[\"Concentration Game, login to save your time\",/*#__PURE__*/_jsx(\"br\",{}),\"Time: \",this.getTime(),\" seconds\"]}),/*#__PURE__*/_jsxs(ModalBody,{children:[/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroupText,{children:\"Username\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"Username\",onChange:this.updateUsername,defaultValue:\"\"})]}),/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroupText,{children:\"Password\"}),/*#__PURE__*/_jsx(Input,{type:\"password\",placeholder:\"Password\",onChange:this.updatePassword,defaultValue:\"\"})]})]}),/*#__PURE__*/_jsxs(ModalFooter,{children:[/*#__PURE__*/_jsx(Button,{color:\"secondary\",onClick:this.restart,children:\"Start\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:this.login,children:\"Login\"})]})]});}}export default RestartModal;","map":{"version":3,"names":["Component","Input","Button","InputGroup","InputGroupText","Modal","ModalBody","ModalFooter","ModalHeader","jsx","_jsx","jsxs","_jsxs","RestartModal","constructor","props","restart","setState","name","password","login","result","state","username","console","log","updateUsername","e","target","value","updatePassword","getTime","Math","floor","finalTime","initialTime","render","isOpen","showModal","toggle","children","placeholder","onChange","defaultValue","type","color","onClick"],"sources":["/Users/aaroncheng/SoftDev/Concentration-Game/src/RestartModal.js"],"sourcesContent":["import { Component } from \"react\";\nimport { Input, Button, InputGroup, InputGroupText, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nclass RestartModal extends Component{\n    // Using modal to pop up when the game is over to allow the user to restart or switch users\n\n    constructor(props){\n        super(props);\n        this.state = {username: \"\", password: \"\"};\n    }\n\n    restart = () =>\n    {\n        this.props.restart();\n        // reset defaults\n        this.setState({name: \"\", password: \"\"});\n    }\n\n    // callback function will make POST request to Login path with username and password in body. Then \n    // App.js will get a token to save to its state, which it will use for getting just the user's fastest time for npw\n    login = () =>{\n        let result = this.props.login(this.state.username, this.state.password);\n\n        // Reset username and password after logging in if successful\n\n        // Nada is what login returns if login failed\n        if (result === \"Nada\"){\n            console.log(\"login failed\");\n        }\n        this.setState({name: \"\", password: \"\"});\n    }\n\n    // The e is what gets what's inside the element\n    updateUsername = (e) =>{\n        this.setState({username: e.target.value});\n    }\n\n    updatePassword = (e) =>{\n        this.setState({password: e.target.value});\n    }\n\n    getTime = () =>{\n        // console.log(\"finalTime: \" + this.props.finalTime);\n        // console.log(\"initialTime: \" + this.props.initialTime);\n        return Math.floor((this.props.finalTime - this.props.initialTime)/1000);\n    }\n\n    // https://stackoverflow.com/questions/45201351/masking-password-input-in-reactjs\n    render(){\n        return <Modal isOpen={this.props.showModal} toggle={this.props.restart}>\n            <ModalHeader>Concentration Game, login to save your time<br/>Time: {this.getTime()} seconds</ModalHeader>\n            <ModalBody>\n                <InputGroup>\n                    <InputGroupText>Username</InputGroupText>\n                    <Input placeholder=\"Username\" onChange={this.updateUsername} defaultValue=\"\"></Input>\n                </InputGroup>\n                <InputGroup>\n                    <InputGroupText>Password</InputGroupText>\n                    <Input type=\"password\" placeholder=\"Password\" onChange={this.updatePassword} defaultValue=\"\"></Input>\n                </InputGroup>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"secondary\" onClick={this.restart}>Start</Button>\n                <Button color=\"primary\" onClick={this.login}>Login</Button>\n            </ModalFooter>\n\n        </Modal>\n    }\n}\n\nexport default RestartModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}