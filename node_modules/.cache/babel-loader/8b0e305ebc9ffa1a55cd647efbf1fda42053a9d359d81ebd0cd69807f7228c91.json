{"ast":null,"code":"import{Component}from\"react\";import card_back from\"./images/back-of-card-pixilart.png\";import'./App.css';// Constructor's props will have object that has values for front and back image path, whether or not flipped, card number and color. The suite is not really necessary in concentration\n// State will also include a class name for what's displaying the card, to know when it is flipped or not\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class PlayingCard extends Component{constructor(props){super(props);this.nameOfClass=\"card-inner\";this.handleClick=()=>{this.props.callback(this.props.id,this);this.flip();};this.flip=()=>{// console.log(\"flip() called\");\nif(this.props.card[\"isFlipped\"]===true){this.nameOfClass=\"card-inner is-flipped\";return\"card-inner is-flipped\";}else{// console.log(this.props.card[\"code\"] + \" should be flipping to back now...\");\nthis.nameOfClass=\"card-inner\";return\"card-inner\";}};this.componentDidUpdate=()=>{this.flip();};if(this.props.card[\"isFlipped\"]===true){this.nameOfClass=\"card-inner is-flipped\";}else{// console.log(this.props.card[\"code\"] + \" should be flipping to back now...\");\nthis.nameOfClass=\"card-inner\";}}// Remember that react has some different names for attributes, one being class -> className\n// isFlipped is another attribute that deals with flipping the card\nrender(){return/*#__PURE__*/_jsx(\"div\",{className:\"card\",onClick:this.handleClick,children:/*#__PURE__*/_jsxs(\"div\",{className:this.flip(),children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-back\",children:/*#__PURE__*/_jsx(\"img\",{style:{size:\"auto\"},src:card_back,alt:\"Back\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-front\",children:/*#__PURE__*/_jsx(\"img\",{src:this.props.card[\"imagePath\"],alt:this.props.card[\"code\"]})})]})});}}export default PlayingCard;","map":{"version":3,"names":["Component","card_back","jsx","_jsx","jsxs","_jsxs","PlayingCard","constructor","props","nameOfClass","handleClick","callback","id","flip","card","componentDidUpdate","render","className","onClick","children","style","size","src","alt"],"sources":["/Users/aaroncheng/SoftDev/Concentration-Game/src/PlayingCard.js"],"sourcesContent":["import { Component } from \"react\";\nimport card_back from \"./images/back-of-card-pixilart.png\"\nimport './App.css';\n\n// Constructor's props will have object that has values for front and back image path, whether or not flipped, card number and color. The suite is not really necessary in concentration\n// State will also include a class name for what's displaying the card, to know when it is flipped or not\nclass PlayingCard extends Component {\n    nameOfClass = \"card-inner\";\n\n    constructor(props){\n        super(props);\n        if (this.props.card[\"isFlipped\"] === true){\n            this.nameOfClass = \"card-inner is-flipped\";\n        }\n        else{\n            // console.log(this.props.card[\"code\"] + \" should be flipping to back now...\");\n            this.nameOfClass= \"card-inner\";\n        }\n    }\n\n    handleClick = () => {\n        this.props.callback(this.props.id, this);\n        this.flip();\n    }\n\n    flip = () => {\n        // console.log(\"flip() called\");\n        if (this.props.card[\"isFlipped\"] === true){\n            this.nameOfClass = \"card-inner is-flipped\";\n            return \"card-inner is-flipped\";\n        }\n        else{\n            // console.log(this.props.card[\"code\"] + \" should be flipping to back now...\");\n            this.nameOfClass =  \"card-inner\";\n            return \"card-inner\";\n        }\n    }\n\n    componentDidUpdate = () =>{\n        this.flip();\n    }\n\n\n    // Remember that react has some different names for attributes, one being class -> className\n    // isFlipped is another attribute that deals with flipping the card\n    render() {\n      return <div className=\"card\" onClick={this.handleClick}>\n        <div className={this.flip()}>\n            <div className=\"card-back\">\n                <img style={{size: \"auto\"}} src={card_back} alt=\"Back\"></img>\n            </div>\n            <div className=\"card-front\">\n                <img src={this.props.card[\"imagePath\"]} alt={this.props.card[\"code\"]}></img>\n            </div>\n        </div>\n\n    </div>\n\n    }\n\n}\n\nexport default PlayingCard;"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,MAAO,CAAAC,SAAS,KAAM,oCAAoC,CAC1D,MAAO,WAAW,CAElB;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,WAAW,QAAS,CAAAN,SAAU,CAGhCO,WAAWA,CAACC,KAAK,CAAC,CACd,KAAK,CAACA,KAAK,CAAC,CAAC,KAHjBC,WAAW,CAAG,YAAY,MAa1BC,WAAW,CAAG,IAAM,CAChB,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC,IAAI,CAACH,KAAK,CAACI,EAAE,CAAE,IAAI,CAAC,CACxC,IAAI,CAACC,IAAI,CAAC,CAAC,CACf,CAAC,MAEDA,IAAI,CAAG,IAAM,CACT;AACA,GAAI,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC,WAAW,CAAC,GAAK,IAAI,CAAC,CACtC,IAAI,CAACL,WAAW,CAAG,uBAAuB,CAC1C,MAAO,uBAAuB,CAClC,CAAC,IACG,CACA;AACA,IAAI,CAACA,WAAW,CAAI,YAAY,CAChC,MAAO,YAAY,CACvB,CACJ,CAAC,MAEDM,kBAAkB,CAAG,IAAK,CACtB,IAAI,CAACF,IAAI,CAAC,CAAC,CACf,CAAC,CA7BG,GAAI,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC,WAAW,CAAC,GAAK,IAAI,CAAC,CACtC,IAAI,CAACL,WAAW,CAAG,uBAAuB,CAC9C,CAAC,IACG,CACA;AACA,IAAI,CAACA,WAAW,CAAE,YAAY,CAClC,CACJ,CAyBA;AACA;AACAO,MAAMA,CAAA,CAAG,CACP,mBAAOb,IAAA,QAAKc,SAAS,CAAC,MAAM,CAACC,OAAO,CAAE,IAAI,CAACR,WAAY,CAAAS,QAAA,cACrDd,KAAA,QAAKY,SAAS,CAAE,IAAI,CAACJ,IAAI,CAAC,CAAE,CAAAM,QAAA,eACxBhB,IAAA,QAAKc,SAAS,CAAC,WAAW,CAAAE,QAAA,cACtBhB,IAAA,QAAKiB,KAAK,CAAE,CAACC,IAAI,CAAE,MAAM,CAAE,CAACC,GAAG,CAAErB,SAAU,CAACsB,GAAG,CAAC,MAAM,CAAM,CAAC,CAC5D,CAAC,cACNpB,IAAA,QAAKc,SAAS,CAAC,YAAY,CAAAE,QAAA,cACvBhB,IAAA,QAAKmB,GAAG,CAAE,IAAI,CAACd,KAAK,CAACM,IAAI,CAAC,WAAW,CAAE,CAACS,GAAG,CAAE,IAAI,CAACf,KAAK,CAACM,IAAI,CAAC,MAAM,CAAE,CAAM,CAAC,CAC3E,CAAC,EACL,CAAC,CAEL,CAAC,CAEN,CAEJ,CAEA,cAAe,CAAAR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}