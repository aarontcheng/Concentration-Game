{"ast":null,"code":"// Thank you God for search and replace, could just spam enter button to replace for each number\nimport ace_of_hearts from'./images/ace_of_hearts.png';import ace_of_diamonds from'./images/ace_of_diamonds.png';import ace_of_clubs from'./images/ace_of_clubs.png';import ace_of_spades from'./images/ace_of_spades.png';import two_of_hearts from'./images/2_of_hearts.png';import two_of_diamonds from'./images/2_of_diamonds.png';import two_of_clubs from'./images/2_of_clubs.png';import two_of_spades from'./images/2_of_spades.png';import three_of_hearts from'./images/3_of_hearts.png';import three_of_diamonds from'./images/3_of_diamonds.png';import three_of_clubs from'./images/3_of_clubs.png';import three_of_spades from'./images/3_of_spades.png';import four_of_hearts from'./images/4_of_hearts.png';import four_of_diamonds from'./images/4_of_diamonds.png';import four_of_clubs from'./images/4_of_clubs.png';import four_of_spades from'./images/4_of_spades.png';import five_of_hearts from'./images/5_of_hearts.png';import five_of_diamonds from'./images/5_of_diamonds.png';import five_of_clubs from'./images/5_of_clubs.png';import five_of_spades from'./images/5_of_spades.png';import six_of_hearts from'./images/6_of_hearts.png';import six_of_diamonds from'./images/6_of_diamonds.png';import six_of_clubs from'./images/6_of_clubs.png';import six_of_spades from'./images/6_of_spades.png';import seven_of_hearts from'./images/7_of_hearts.png';import seven_of_diamonds from'./images/7_of_diamonds.png';import seven_of_clubs from'./images/7_of_clubs.png';import seven_of_spades from'./images/7_of_spades.png';import eight_of_hearts from'./images/8_of_hearts.png';import eight_of_diamonds from'./images/8_of_diamonds.png';import eight_of_clubs from'./images/8_of_clubs.png';import eight_of_spades from'./images/8_of_spades.png';import nine_of_hearts from'./images/9_of_hearts.png';import nine_of_diamonds from'./images/9_of_diamonds.png';import nine_of_clubs from'./images/9_of_clubs.png';import nine_of_spades from'./images/9_of_spades.png';import ten_of_hearts from'./images/10_of_hearts.png';import ten_of_diamonds from'./images/10_of_diamonds.png';import ten_of_clubs from'./images/10_of_clubs.png';import ten_of_spades from'./images/10_of_spades.png';import jack_of_hearts from'./images/jack_of_hearts2.png';import jack_of_diamonds from'./images/jack_of_diamonds2.png';import jack_of_clubs from'./images/jack_of_clubs.png';import jack_of_spades from'./images/jack_of_spades.png';import queen_of_hearts from'./images/queen_of_hearts2.png';import queen_of_diamonds from'./images/queen_of_diamonds2.png';import queen_of_clubs from'./images/queen_of_clubs2.png';import queen_of_spades from'./images/queen_of_spades2.png';import king_of_hearts from'./images/king_of_hearts2.png';import king_of_diamonds from'./images/king_of_diamonds2.png';import king_of_clubs from'./images/king_of_clubs2.png';import king_of_spades from'./images/king_of_spades2.png';import'./App.css';import{Component}from'react';import BoardTable from'./BoardTable';import RestartModal from'./RestartModal';import{Button}from'reactstrap';import Stopwatch from'./Stopwatch';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{// For randomly shuffling cards\ncompareFn(a,b){return Math.floor(Math.random()*(2-0))+0-1;// return random integer from -1 to 1, to replicate actual sorting output\n}constructor(props){super(props);// Need to store the first clicked card, and then have callback functions given to PlayingCards\n// To return their code so we can compare\n// setState info: GOAT https://www.reddit.com/r/react/comments/u5wzbu/components_not_rerendering_with_state_changes/\n//setState does shallow equality check before actually updating, so I will need to make a new map using new Map(existingMap)\nthis.committedCards=new Map([[0,{\"code\":\"AceBlack\",\"imagePath\":ace_of_hearts,\"isFlipped\":false,\"solved\":false}],[1,{\"code\":\"AceBlack\",\"imagePath\":ace_of_diamonds,\"isFlipped\":false,\"solved\":false}],[2,{\"code\":\"AceRed\",\"imagePath\":ace_of_clubs,\"isFlipped\":false,\"solved\":false}],[3,{\"code\":\"AceRed\",\"imagePath\":ace_of_spades,\"isFlipped\":false,\"solved\":false}],[4,{\"code\":\"2Black\",\"imagePath\":two_of_spades,\"isFlipped\":false,\"solved\":false}],[5,{\"code\":\"2Black\",\"imagePath\":two_of_clubs,\"isFlipped\":false,\"solved\":false}],[6,{\"code\":\"2Red\",\"imagePath\":two_of_hearts,\"isFlipped\":false,\"solved\":false}],[7,{\"code\":\"2Red\",\"imagePath\":two_of_diamonds,\"isFlipped\":false,\"solved\":false}],[8,{\"code\":\"3Black\",\"imagePath\":three_of_spades,\"isFlipped\":false,\"solved\":false}],[9,{\"code\":\"3Black\",\"imagePath\":three_of_clubs,\"isFlipped\":false,\"solved\":false}],[10,{\"code\":\"3Red\",\"imagePath\":three_of_hearts,\"isFlipped\":false,\"solved\":false}],[11,{\"code\":\"3Red\",\"imagePath\":three_of_diamonds,\"isFlipped\":false,\"solved\":false}],[12,{\"code\":\"4Black\",\"imagePath\":four_of_spades,\"isFlipped\":false,\"solved\":false}],[13,{\"code\":\"4Black\",\"imagePath\":four_of_clubs,\"isFlipped\":false,\"solved\":false}],[14,{\"code\":\"4Red\",\"imagePath\":four_of_hearts,\"isFlipped\":false,\"solved\":false}],[15,{\"code\":\"4Red\",\"imagePath\":four_of_diamonds,\"isFlipped\":false,\"solved\":false}],[16,{\"code\":\"5Black\",\"imagePath\":five_of_spades,\"isFlipped\":false,\"solved\":false}],[17,{\"code\":\"5Black\",\"imagePath\":five_of_clubs,\"isFlipped\":false,\"solved\":false}],[18,{\"code\":\"5Red\",\"imagePath\":five_of_hearts,\"isFlipped\":false,\"solved\":false}],[19,{\"code\":\"5Red\",\"imagePath\":five_of_diamonds,\"isFlipped\":false,\"solved\":false}],[20,{\"code\":\"6Black\",\"imagePath\":six_of_spades,\"isFlipped\":false,\"solved\":false}],[21,{\"code\":\"6Black\",\"imagePath\":six_of_clubs,\"isFlipped\":false,\"solved\":false}]// [22, {\"code\": \"6Red\", \"imagePath\": six_of_hearts, \"isFlipped\": false,\"solved\": false}],\n// [23, {\"code\": \"6Red\", \"imagePath\": six_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n// [24, {\"code\": \"7Black\", \"imagePath\": seven_of_spades, \"isFlipped\": false,\"solved\": false}],\n// [25, {\"code\": \"7Black\", \"imagePath\": seven_of_clubs, \"isFlipped\": false,\"solved\": false}],\n// [26, {\"code\": \"7Red\", \"imagePath\": seven_of_hearts, \"isFlipped\": false,\"solved\": false}],\n// [27, {\"code\": \"7Red\", \"imagePath\": seven_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n// [28, {\"code\": \"8Black\", \"imagePath\": eight_of_spades, \"isFlipped\": false,\"solved\": false}],\n// [29, {\"code\": \"8Black\", \"imagePath\": eight_of_clubs, \"isFlipped\": false,\"solved\": false}],\n// [30, {\"code\": \"8Red\", \"imagePath\": eight_of_hearts, \"isFlipped\": false,\"solved\": false}],\n// [31, {\"code\": \"8Red\", \"imagePath\": eight_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n// [32, {\"code\": \"9Black\", \"imagePath\": nine_of_spades, \"isFlipped\": false,\"solved\": false}],\n// [33, {\"code\": \"9Black\", \"imagePath\": nine_of_clubs, \"isFlipped\": false,\"solved\": false}],\n// [34, {\"code\": \"9Red\", \"imagePath\": nine_of_hearts, \"isFlipped\": false,\"solved\": false}],\n// [35, {\"code\": \"9Red\", \"imagePath\": nine_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n// [36, {\"code\": \"10Black\", \"imagePath\": ten_of_spades, \"isFlipped\": false,\"solved\": false}],\n// [37, {\"code\": \"10Black\", \"imagePath\": ten_of_clubs, \"isFlipped\": false,\"solved\": false}],\n// [38, {\"code\": \"10Red\", \"imagePath\": ten_of_hearts, \"isFlipped\": false,\"solved\": false}],\n// [39, {\"code\": \"10Red\", \"imagePath\": ten_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n// [40, {\"code\": \"JackBlack\", \"imagePath\": jack_of_spades, \"isFlipped\": false,\"solved\": false}],\n// [41, {\"code\": \"JackBlack\", \"imagePath\": jack_of_clubs, \"isFlipped\": false,\"solved\": false}],\n// [42, {\"code\": \"JackRed\", \"imagePath\": jack_of_hearts, \"isFlipped\": false,\"solved\": false}],\n// [43, {\"code\": \"JackRed\", \"imagePath\": jack_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n// [44, {\"code\": \"QueenBlack\", \"imagePath\": queen_of_spades, \"isFlipped\": false,\"solved\": false}],\n// [45, {\"code\": \"QueenBlack\", \"imagePath\": queen_of_clubs, \"isFlipped\": false,\"solved\": false}],\n// [46, {\"code\": \"QueenRed\", \"imagePath\": queen_of_hearts, \"isFlipped\": false,\"solved\": false}],\n// [47, {\"code\": \"QueenRed\", \"imagePath\": queen_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n// [48, {\"code\": \"KingBlack\", \"imagePath\": king_of_spades, \"isFlipped\": false,\"solved\": false}],\n// [49, {\"code\": \"KingBlack\", \"imagePath\": king_of_clubs, \"isFlipped\": false,\"solved\": false}],\n// [50, {\"code\": \"KingRed\", \"imagePath\": king_of_hearts, \"isFlipped\": false,\"solved\": false}],\n// [51, {\"code\": \"KingRed\", \"imagePath\": king_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n]);this.shuffle=map=>{return new Map([...map.entries()].sort(this.compareFn));};// https://stackoverflow.com/questions/31158902/is-it-possible-to-sort-a-es6-map-object?noredirect=1&lq=1\n// initial shuffler\nthis.committedCards=new Map([...this.committedCards.entries()].sort(this.compareFn));// Not in state because not used as any components prop\nthis.firstCardId=-1;this.firstCard=null;this.PAIRS_TO_WIN=11;this.numPairs=0;// To prevent clicking other cards while showing wrong match\nthis.showingWrongMatch=false;// The state version of this is there for when I put it into a component, but this one is used cause its faster\nthis.currentName=\"\";// For getting stopwatch\nthis.returnSelf=sw=>{this.setState({stopwatch:sw});};// id is the key of the card\n// While working on this function, it would usually take two clicks to get the card to flip.\n// But after getting rid of some unnecessary uses of this.state.firstCardId, started doing it on one click for some reason\nthis.handleClick=async(id,card)=>{// console.log(this.committedCards);\n// If you're selecting same or card is already matched, won't do anything\nif(this.firstCardId===id||card.props.card[\"solved\"]===true||this.showingWrongMatch||this.state.gameOver===true){console.log(\"bruh\");}else if(this.firstCardId===-1){// console.log(\"option 2\");\nvar newMap=new Map(this.committedCards);// For some reason, even tho we already set firstCardId, we can't use it. So I'm just using id instaed, which makes more sense honestly\nthis.firstCardId=id;this.firstCard=card;// console.log(\"yo\");\n// console.log(this.state.cardsInfo[id][\"code\"]);\n// Flipping selected card\nnewMap.get(id)[\"isFlipped\"]=true;// If we work with a copy of the existing map, we can get setState to actually set the state\nthis.setState({cardsInfo:newMap});}else if(this.committedCards.get(id)[\"code\"]===this.committedCards.get(this.firstCardId)[\"code\"]){// Matched\n// console.log(\"Matched!!!!\");\nvar newMap=new Map(this.committedCards);this.numPairs=this.numPairs+1;this.firstCardId=-1;newMap.get(id)[\"isFlipped\"]=true;// Setting the cards' solved variable to true, this works so no need to change right now, although I would rather fix since I figured out setState with newMap\nthis.firstCard.props.card[\"solved\"]=true;card.props.card[\"solved\"]=true;// console.log(this.numPairs);\nthis.setState({cardsInfo:newMap});// This is the only option where the player can win, so is where we check if they won\nthis.checkGameOver();}else{// Not a match, reset firstCardId. \n// console.log(\"Not Matched!!!!\");\nvar newMap=new Map(this.committedCards);// flip both cards back\nnewMap.get(id)[\"isFlipped\"]=true;card.flip();// So that shallow equality doesn't mess it up, since setting state two times\nthis.setState({cardsInfo:new Map(newMap)});// For delay, adn to not let player select cards while in delay\nthis.showingWrongMatch=true;await this.sleep(1000);this.showingWrongMatch=false;// By giving parameter to get the actual first card selected as component, I can straight up manipulate it from App\nnewMap.get(id)[\"isFlipped\"]=false;this.firstCard.props.card[\"isFlipped\"]=false;this.firstCard.flip();card.flip();// console.log(newMap.get(this.firstCardId)[\"code\"] + \": \" + newMap.get(this.firstCardId)[\"isFlipped\"]);\n// reset to choose new first card\nthis.firstCardId=-1;this.setState({cardsInfo:newMap});}};// Below functions deal with restarting the game with the Restart Modal\n// Function to check if number of pairs is = to constant variable of number of pairs needed to win\nthis.checkGameOver=()=>{if(this.numPairs===this.PAIRS_TO_WIN){// get the time now so give to restart modal for final time\nthis.setState({showRestartModal:true,finalTime:Date.now(),gameOver:true});// console.log(\"game over\");\nthis.setFastestTime(this.state.currentUserName,this.state.currentUserKey,Math.floor((Date.now()-this.state.initialTime)/1000));}};this.turnOffRestart=()=>{this.setState({showRestartModal:false});};this.restart=async()=>{// Create copy of committedCards and then alter it. Then the setState will work. Before, I just had a copyCommittedCards that I would just make a new map of and then setState with it, but the copyCommittedCards ended up changing after the first restart, so couldn't do that\n// To not let user click any more cards, lest they break it while the states finishing up\nthis.setState({gameOver:true});var newMap=new Map(this.committedCards);// console.log(\"176\");\nnewMap.forEach((values,key)=>{newMap.get(key)[\"solved\"]=false;newMap.get(key)[\"isFlipped\"]=false;});// Reset to default values\nthis.setState({cardsInfo:new Map(newMap)});this.committedCards=new Map(newMap);this.numPairs=0;this.turnOffRestart();this.firstCardId=-1;// console.log(\"restarting...\");\nawait this.sleep(1000);var secondNewMap=new Map(this.committedCards);secondNewMap=this.shuffle(secondNewMap);// TO prevent pplayer from seeing the new order of cards when they flip back\nthis.setState({cardsInfo:secondNewMap,initialTime:Date.now(),finalTime:Date.now(),gameOver:false});this.committedCards=secondNewMap;// To reset timer, since modal doesn't have access to stopwatch\nthis.state.stopwatch.onClickReset();// console.log(this.committedCards.get(0));\n};// *******************************************************\n// APIIIIIIIII STUUUUUUFFFFFFFFFFFf\n// *******************************************************\nthis.getTime=()=>{//Call \"http://localhost:5000\" directly \n// now that CORS is set up in Flask\n// Seems like url was using losalhost, so that was causing cors issue\n// Just realized that if anyone named themselves login, that would cause major issues. probably why query string is usually better\n// Will circumvent by creating a login user with a password even I'll forget\nconsole.log(this.currentName,\"name\");let url='http://127.0.0.1:5000/user/'+this.currentName;console.log(url);fetch(url).then(response=>{console.log(\"Brooooooo\");console.log(response);if(response.status===200){return response.json();}else{console.log(\"HTTP error:\"+response.status+\":\"+response.statusText);return\"N/A\";}})//The promise response is returned\n.then(output=>{// console.log(\"it should be displaying now\");\nthis.updateTime(output);}).catch(error=>{console.log(error);});};this.getLeaderboard=()=>{//Call \"http://localhost:5000\" directly \n// now that CORS is set up in Flask\n// Seems like url was using losalhost, so that was causing cors issue\nfetch('http://127.0.0.1:5000/leaderboard').then(response=>{// console.log(response)\nif(response.status===200){return response.json();}else{console.log(\"HTTP error:\"+response.status+\":\"+response.statusText);return[[\"status \",response.status]];}})//The promise response is returned, then we extract the json data\n.then(jsonOutput=>//jsonOutput now has result of the data extraction\n{// console.log(\"it should be displaying now\");\nthis.updateLeaderboard(jsonOutput);}).catch(error=>{console.log(error);this.updateLeaderboard(\"\");});};// The leaderboard is going to be a single string for now, can make each position be an object if I want to\nthis.updateLeaderboard=apiResponse=>{// console.log(apiResponse, \"This is the response\");\nconsole.log(apiResponse[0],\"This is the object\");// Initial string\nvar display=\"\";console.log(apiResponse.length,\"length\");// For some reason, using for loop wouldn't work (when I would console.log the user, it would return a number instead)\nfor(let i=0;i<apiResponse.length;i++){let user=apiResponse[i];console.log(user);if(user[\"fastest_time\"]===-1){display+=user[\"name\"]+\": \"+\"N/A\\n\";}else{display+=user[\"name\"]+\": \"+user[\"fastest_time\"]+\" seconds\\n\";}}console.log(display);this.setState({leaderboard:display});};this.updateTime=apiResponse=>{// console.log(apiResponse, \"This is the response\");\nconsole.log(apiResponse,\"This is the object\");// Initial string\nvar display=\"Fastest Time: \\n\"+apiResponse+\" seconds\";// For some reason, using for loop wouldn't work (when I would console.log the user, it would return a number instead)\nconsole.log(display);this.setState({currentUserFastest:display});};this.login=(_name,_password)=>{let url='http://127.0.0.1:5000/user/login';let jData=JSON.stringify({name:_name,password:_password});fetch(url,{method:'POST',body:jData,headers:{\"Content-type\":\"application/json; charset = UTF-8\"}}).then(response=>{if(response.status===200){return response.json();}else{return[[\"status \",response.status]];}}).then(jsonOutput=>{// The jsonOutput might need a name change since this should just return the session key, not a json value\nthis.setState({currentUserName:_name,currentUserKey:jsonOutput});this.currentName=_name;console.log(this.currentName);console.log(jsonOutput,\"key\");this.getTime();}).catch(error=>{console.log(error);});};this.setFastestTime=(_name,_sessionKey,_time)=>{let url='http://127.0.0.1:5000/user';let jData=JSON.stringify({name:_name,sessionKey:_sessionKey,time:_time});fetch(url,{method:'PUT',body:jData,headers:{\"Content-type\":\"application/json; charset = UTF-8\"}}).then(response=>{if(response.status===200){return response.json();}else{return[[\"status \",response.status]];}}).then(jsonOutput=>{// The jsonOutput might need a name change since this should just return the session key, not a json value\nthis.getLeaderboard();}).catch(error=>{console.log(error);});};this.state={// Show login page at start up\nshowRestartModal:true,cardsInfo:this.committedCards,initialTime:Date.now(),finalTime:Date.now(),gameOver:false,stopwatch:null,leaderboard:\"\",currentUserName:\"\",currentUserKey:\"\",currentUserFastest:\"\"};// this.committedCards.forEach((values, key) => {console.log(values, key)})\n}// Function to delay flipping of cards\nsleep(ms){return new Promise(resolve=>setTimeout(resolve,ms));}componentDidMount(){console.log(this.getLeaderboard());console.log(this.getTime());// console.log(this.state.leaderboard)\n}// *******************************************************\n// ENDDDDDD OFFFFFFFF APIIIIIIIII STUUUUUUFFFFFFFFFFFf\n// *******************************************************\n// The pre-wrap is there for \\n to not be disregarded since it's whitespace\nrender(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Concentration Game\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-container\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{whiteSpace:\"pre-wrap\",backgroundColor:\"darkGreen\",minWidth:\"fit-content\",maxWidth:\"25%\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Leaderboard\"}),this.state.leaderboard]}),/*#__PURE__*/_jsx(\"div\",{style:{background:\"purple\",minWidth:\"fit-content\",whiteSpace:\"pre-wrap\"},children:this.state.currentUserFastest}),/*#__PURE__*/_jsx(Stopwatch,{initialTime:this.state.initialTime,gameOver:this.state.gameOver,restart:this.restart,callback:this.returnSelf})]}),/*#__PURE__*/_jsx(BoardTable,{cards:this.state.cardsInfo,callback:this.handleClick}),/*#__PURE__*/_jsx(RestartModal,{initialTime:this.state.initialTime,finalTime:this.state.finalTime,restart:this.restart,toggle:this.turnOffRestart,login:this.login,showModal:this.state.showRestartModal})]});}}export default App;","map":{"version":3,"names":["ace_of_hearts","ace_of_diamonds","ace_of_clubs","ace_of_spades","two_of_hearts","two_of_diamonds","two_of_clubs","two_of_spades","three_of_hearts","three_of_diamonds","three_of_clubs","three_of_spades","four_of_hearts","four_of_diamonds","four_of_clubs","four_of_spades","five_of_hearts","five_of_diamonds","five_of_clubs","five_of_spades","six_of_hearts","six_of_diamonds","six_of_clubs","six_of_spades","seven_of_hearts","seven_of_diamonds","seven_of_clubs","seven_of_spades","eight_of_hearts","eight_of_diamonds","eight_of_clubs","eight_of_spades","nine_of_hearts","nine_of_diamonds","nine_of_clubs","nine_of_spades","ten_of_hearts","ten_of_diamonds","ten_of_clubs","ten_of_spades","jack_of_hearts","jack_of_diamonds","jack_of_clubs","jack_of_spades","queen_of_hearts","queen_of_diamonds","queen_of_clubs","queen_of_spades","king_of_hearts","king_of_diamonds","king_of_clubs","king_of_spades","Component","BoardTable","RestartModal","Button","Stopwatch","jsx","_jsx","jsxs","_jsxs","App","compareFn","a","b","Math","floor","random","constructor","props","committedCards","Map","shuffle","map","entries","sort","firstCardId","firstCard","PAIRS_TO_WIN","numPairs","showingWrongMatch","currentName","returnSelf","sw","setState","stopwatch","handleClick","id","card","state","gameOver","console","log","newMap","get","cardsInfo","checkGameOver","flip","sleep","showRestartModal","finalTime","Date","now","setFastestTime","currentUserName","currentUserKey","initialTime","turnOffRestart","restart","forEach","values","key","secondNewMap","onClickReset","getTime","url","fetch","then","response","status","json","statusText","output","updateTime","catch","error","getLeaderboard","jsonOutput","updateLeaderboard","apiResponse","display","length","i","user","leaderboard","currentUserFastest","login","_name","_password","jData","JSON","stringify","name","password","method","body","headers","_sessionKey","_time","sessionKey","time","ms","Promise","resolve","setTimeout","componentDidMount","render","className","children","style","whiteSpace","backgroundColor","minWidth","maxWidth","background","callback","cards","toggle","showModal"],"sources":["/Users/aaroncheng/SoftDev/Concentration-Game/src/App.js"],"sourcesContent":["// Thank you God for search and replace, could just spam enter button to replace for each number\nimport ace_of_hearts from './images/ace_of_hearts.png';\nimport ace_of_diamonds from './images/ace_of_diamonds.png';\nimport ace_of_clubs from './images/ace_of_clubs.png';\nimport ace_of_spades from './images/ace_of_spades.png';\n\nimport two_of_hearts from './images/2_of_hearts.png';\nimport two_of_diamonds from './images/2_of_diamonds.png';\nimport two_of_clubs from './images/2_of_clubs.png';\nimport two_of_spades from './images/2_of_spades.png';\n\nimport three_of_hearts from './images/3_of_hearts.png';\nimport three_of_diamonds from './images/3_of_diamonds.png';\nimport three_of_clubs from './images/3_of_clubs.png';\nimport three_of_spades from './images/3_of_spades.png';\n\nimport four_of_hearts from './images/4_of_hearts.png';\nimport four_of_diamonds from './images/4_of_diamonds.png';\nimport four_of_clubs from './images/4_of_clubs.png';\nimport four_of_spades from './images/4_of_spades.png';\n\nimport five_of_hearts from './images/5_of_hearts.png';\nimport five_of_diamonds from './images/5_of_diamonds.png';\nimport five_of_clubs from './images/5_of_clubs.png';\nimport five_of_spades from './images/5_of_spades.png';\n\nimport six_of_hearts from './images/6_of_hearts.png';\nimport six_of_diamonds from './images/6_of_diamonds.png';\nimport six_of_clubs from './images/6_of_clubs.png';\nimport six_of_spades from './images/6_of_spades.png';\n\nimport seven_of_hearts from './images/7_of_hearts.png';\nimport seven_of_diamonds from './images/7_of_diamonds.png';\nimport seven_of_clubs from './images/7_of_clubs.png';\nimport seven_of_spades from './images/7_of_spades.png';\n\nimport eight_of_hearts from './images/8_of_hearts.png';\nimport eight_of_diamonds from './images/8_of_diamonds.png';\nimport eight_of_clubs from './images/8_of_clubs.png';\nimport eight_of_spades from './images/8_of_spades.png';\n\nimport nine_of_hearts from './images/9_of_hearts.png';\nimport nine_of_diamonds from './images/9_of_diamonds.png';\nimport nine_of_clubs from './images/9_of_clubs.png';\nimport nine_of_spades from './images/9_of_spades.png';\n\nimport ten_of_hearts from './images/10_of_hearts.png';\nimport ten_of_diamonds from './images/10_of_diamonds.png';\nimport ten_of_clubs from './images/10_of_clubs.png';\nimport ten_of_spades from './images/10_of_spades.png';\n\nimport jack_of_hearts from './images/jack_of_hearts2.png';\nimport jack_of_diamonds from './images/jack_of_diamonds2.png';\nimport jack_of_clubs from './images/jack_of_clubs.png';\nimport jack_of_spades from './images/jack_of_spades.png';\n\nimport queen_of_hearts from './images/queen_of_hearts2.png';\nimport queen_of_diamonds from './images/queen_of_diamonds2.png';\nimport queen_of_clubs from './images/queen_of_clubs2.png';\nimport queen_of_spades from './images/queen_of_spades2.png';\n\nimport king_of_hearts from './images/king_of_hearts2.png';\nimport king_of_diamonds from './images/king_of_diamonds2.png';\nimport king_of_clubs from './images/king_of_clubs2.png';\nimport king_of_spades from './images/king_of_spades2.png';\n\nimport './App.css';\nimport { Component } from 'react';\nimport BoardTable  from './BoardTable';\nimport RestartModal from './RestartModal';\nimport { Button } from 'reactstrap';\nimport Stopwatch from './Stopwatch';\n\n\nclass App extends Component{\n  // Need to store the first clicked card, and then have callback functions given to PlayingCards\n  // To return their code so we can compare\n\n\n  // setState info: GOAT https://www.reddit.com/r/react/comments/u5wzbu/components_not_rerendering_with_state_changes/\n  //setState does shallow equality check before actually updating, so I will need to make a new map using new Map(existingMap)\n\n  committedCards = new Map([\n    [0, {\"code\": \"AceBlack\", \"imagePath\": ace_of_hearts, \"isFlipped\": false, \"solved\": false}],\n    [1, {\"code\": \"AceBlack\", \"imagePath\": ace_of_diamonds, \"isFlipped\": false, \"solved\": false}],\n    [2, {\"code\": \"AceRed\", \"imagePath\": ace_of_clubs, \"isFlipped\": false, \"solved\": false}],\n    [3, {\"code\": \"AceRed\", \"imagePath\": ace_of_spades, \"isFlipped\": false,\"solved\": false}],\n\n    [4, {\"code\": \"2Black\", \"imagePath\": two_of_spades, \"isFlipped\": false,\"solved\": false}],\n    [5, {\"code\": \"2Black\", \"imagePath\": two_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    [6, {\"code\": \"2Red\", \"imagePath\": two_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    [7, {\"code\": \"2Red\", \"imagePath\": two_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    [8, {\"code\": \"3Black\", \"imagePath\": three_of_spades, \"isFlipped\": false,\"solved\": false}],\n    [9, {\"code\": \"3Black\", \"imagePath\": three_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    [10, {\"code\": \"3Red\", \"imagePath\": three_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    [11, {\"code\": \"3Red\", \"imagePath\": three_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    [12, {\"code\": \"4Black\", \"imagePath\": four_of_spades, \"isFlipped\": false,\"solved\": false}],\n    [13, {\"code\": \"4Black\", \"imagePath\": four_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    [14, {\"code\": \"4Red\", \"imagePath\": four_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    [15, {\"code\": \"4Red\", \"imagePath\": four_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    [16, {\"code\": \"5Black\", \"imagePath\": five_of_spades, \"isFlipped\": false,\"solved\": false}],\n    [17, {\"code\": \"5Black\", \"imagePath\": five_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    [18, {\"code\": \"5Red\", \"imagePath\": five_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    [19, {\"code\": \"5Red\", \"imagePath\": five_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    [20, {\"code\": \"6Black\", \"imagePath\": six_of_spades, \"isFlipped\": false,\"solved\": false}],\n    [21, {\"code\": \"6Black\", \"imagePath\": six_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    // [22, {\"code\": \"6Red\", \"imagePath\": six_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    // [23, {\"code\": \"6Red\", \"imagePath\": six_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    // [24, {\"code\": \"7Black\", \"imagePath\": seven_of_spades, \"isFlipped\": false,\"solved\": false}],\n    // [25, {\"code\": \"7Black\", \"imagePath\": seven_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    // [26, {\"code\": \"7Red\", \"imagePath\": seven_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    // [27, {\"code\": \"7Red\", \"imagePath\": seven_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    // [28, {\"code\": \"8Black\", \"imagePath\": eight_of_spades, \"isFlipped\": false,\"solved\": false}],\n    // [29, {\"code\": \"8Black\", \"imagePath\": eight_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    // [30, {\"code\": \"8Red\", \"imagePath\": eight_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    // [31, {\"code\": \"8Red\", \"imagePath\": eight_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    // [32, {\"code\": \"9Black\", \"imagePath\": nine_of_spades, \"isFlipped\": false,\"solved\": false}],\n    // [33, {\"code\": \"9Black\", \"imagePath\": nine_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    // [34, {\"code\": \"9Red\", \"imagePath\": nine_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    // [35, {\"code\": \"9Red\", \"imagePath\": nine_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    // [36, {\"code\": \"10Black\", \"imagePath\": ten_of_spades, \"isFlipped\": false,\"solved\": false}],\n    // [37, {\"code\": \"10Black\", \"imagePath\": ten_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    // [38, {\"code\": \"10Red\", \"imagePath\": ten_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    // [39, {\"code\": \"10Red\", \"imagePath\": ten_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    // [40, {\"code\": \"JackBlack\", \"imagePath\": jack_of_spades, \"isFlipped\": false,\"solved\": false}],\n    // [41, {\"code\": \"JackBlack\", \"imagePath\": jack_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    // [42, {\"code\": \"JackRed\", \"imagePath\": jack_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    // [43, {\"code\": \"JackRed\", \"imagePath\": jack_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    // [44, {\"code\": \"QueenBlack\", \"imagePath\": queen_of_spades, \"isFlipped\": false,\"solved\": false}],\n    // [45, {\"code\": \"QueenBlack\", \"imagePath\": queen_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    // [46, {\"code\": \"QueenRed\", \"imagePath\": queen_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    // [47, {\"code\": \"QueenRed\", \"imagePath\": queen_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n    // [48, {\"code\": \"KingBlack\", \"imagePath\": king_of_spades, \"isFlipped\": false,\"solved\": false}],\n    // [49, {\"code\": \"KingBlack\", \"imagePath\": king_of_clubs, \"isFlipped\": false,\"solved\": false}],\n    // [50, {\"code\": \"KingRed\", \"imagePath\": king_of_hearts, \"isFlipped\": false,\"solved\": false}],\n    // [51, {\"code\": \"KingRed\", \"imagePath\": king_of_diamonds, \"isFlipped\": false,\"solved\": false}],\n\n  ]\n  );\n\n  // For randomly shuffling cards\n  compareFn(a, b){\n    return Math.floor(Math.random() * (2 - 0) ) + 0 - 1; // return random integer from -1 to 1, to replicate actual sorting output\n  }\n\n  shuffle = (map) =>{\n    return new Map([...map.entries()].sort(this.compareFn));\n  }\n  // https://stackoverflow.com/questions/31158902/is-it-possible-to-sort-a-es6-map-object?noredirect=1&lq=1\n  // initial shuffler\n  committedCards = new Map([...this.committedCards.entries()].sort(this.compareFn));\n\n  // Not in state because not used as any components prop\n  firstCardId = -1;\n  firstCard = null;\n\n  PAIRS_TO_WIN = 11;\n  numPairs = 0;\n\n  // To prevent clicking other cards while showing wrong match\n  showingWrongMatch = false;\n\n  // The state version of this is there for when I put it into a component, but this one is used cause its faster\n  currentName = \"\"\n\n  constructor(props)\n  {\n      super(props);\n      this.state = {\n        // Show login page at start up\n        showRestartModal: true,\n        cardsInfo: this.committedCards,\n        initialTime: Date.now(),\n        finalTime: Date.now(),\n        gameOver: false,\n        stopwatch: null,\n        leaderboard: \"\",\n        currentUserName: \"\",\n        currentUserKey: \"\",\n        currentUserFastest: \"\"\n      };  \n      // this.committedCards.forEach((values, key) => {console.log(values, key)})\n  }\n\n  // For getting stopwatch\n  returnSelf = (sw) =>{\n    this.setState({stopwatch: sw})\n  }\n\n\n\n  // id is the key of the card\n  // While working on this function, it would usually take two clicks to get the card to flip.\n  // But after getting rid of some unnecessary uses of this.state.firstCardId, started doing it on one click for some reason\n  handleClick = async (id, card) => {\n    // console.log(this.committedCards);\n    // If you're selecting same or card is already matched, won't do anything\n    if (this.firstCardId === id || card.props.card[\"solved\"] === true || this.showingWrongMatch || this.state.gameOver === true){\n      console.log(\"bruh\");\n    }\n    else if (this.firstCardId === -1){\n      // console.log(\"option 2\");\n      var newMap = new Map(this.committedCards);\n      // For some reason, even tho we already set firstCardId, we can't use it. So I'm just using id instaed, which makes more sense honestly\n      this.firstCardId = id;\n      this.firstCard = card;\n\n      // console.log(\"yo\");\n      // console.log(this.state.cardsInfo[id][\"code\"]);\n\n      // Flipping selected card\n      newMap.get(id)[\"isFlipped\"] = true;\n    \n      // If we work with a copy of the existing map, we can get setState to actually set the state\n      this.setState({cardsInfo: newMap});\n\n    }\n    else if (this.committedCards.get(id)[\"code\"] === this.committedCards.get(this.firstCardId)[\"code\"]){ // Matched\n      // console.log(\"Matched!!!!\");\n\n      var newMap = new Map(this.committedCards);\n\n      this.numPairs = this.numPairs + 1;\n      this.firstCardId = -1;\n      newMap.get(id)[\"isFlipped\"] = true;\n\n      // Setting the cards' solved variable to true, this works so no need to change right now, although I would rather fix since I figured out setState with newMap\n      this.firstCard.props.card[\"solved\"] = true;\n      card.props.card[\"solved\"] = true;\n      \n      // console.log(this.numPairs);\n      \n      this.setState({cardsInfo: newMap});\n\n\n      // This is the only option where the player can win, so is where we check if they won\n      this.checkGameOver();\n    }\n    else{ // Not a match, reset firstCardId. \n      // console.log(\"Not Matched!!!!\");\n\n      var newMap = new Map(this.committedCards);\n      // flip both cards back\n      newMap.get(id)[\"isFlipped\"] = true;\n      card.flip();\n\n      // So that shallow equality doesn't mess it up, since setting state two times\n      this.setState({cardsInfo: new Map(newMap)});\n\n      // For delay, adn to not let player select cards while in delay\n      this.showingWrongMatch = true;\n      await this.sleep(1000);\n      this.showingWrongMatch = false;\n\n      // By giving parameter to get the actual first card selected as component, I can straight up manipulate it from App\n      \n      newMap.get(id)[\"isFlipped\"] = false;\n      this.firstCard.props.card[\"isFlipped\"] = false;\n      this.firstCard.flip();\n      card.flip();\n\n      // console.log(newMap.get(this.firstCardId)[\"code\"] + \": \" + newMap.get(this.firstCardId)[\"isFlipped\"]);\n\n      // reset to choose new first card\n      this.firstCardId = -1;\n\n  \n\n      this.setState({cardsInfo: newMap});\n\n    }\n\n  }\n\n  // Function to delay flipping of cards\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n\n  // Below functions deal with restarting the game with the Restart Modal\n\n  // Function to check if number of pairs is = to constant variable of number of pairs needed to win\n  checkGameOver = () => {\n    if (this.numPairs === this.PAIRS_TO_WIN){\n\n      // get the time now so give to restart modal for final time\n      this.setState({showRestartModal: true, finalTime: Date.now(), gameOver: true});\n      // console.log(\"game over\");\n\n      this.setFastestTime(this.state.currentUserName, this.state.currentUserKey, Math.floor((Date.now() - this.state.initialTime) / 1000));\n\n    }\n  }\n\n  turnOffRestart = () =>{\n    this.setState({showRestartModal: false});\n  }\n\n  restart = async () =>{\n    // Create copy of committedCards and then alter it. Then the setState will work. Before, I just had a copyCommittedCards that I would just make a new map of and then setState with it, but the copyCommittedCards ended up changing after the first restart, so couldn't do that\n    \n    // To not let user click any more cards, lest they break it while the states finishing up\n    this.setState({gameOver: true});\n\n    var newMap = new Map(this.committedCards);\n    // console.log(\"176\");\n    newMap.forEach((values, key) => {newMap.get(key)[\"solved\"] = false; newMap.get(key)[\"isFlipped\"] = false;});\n    \n    // Reset to default values\n    this.setState({cardsInfo: new Map(newMap)});\n    this.committedCards = new Map(newMap);\n    this.numPairs = 0;\n    this.turnOffRestart();\n    this.firstCardId = -1;\n    // console.log(\"restarting...\");\n    await this.sleep(1000);\n    \n    var secondNewMap = new Map(this.committedCards);\n    secondNewMap = this.shuffle(secondNewMap);\n    \n\n    // TO prevent pplayer from seeing the new order of cards when they flip back\n    \n\n    this.setState({cardsInfo: secondNewMap, initialTime: Date.now(), finalTime: Date.now(), gameOver: false})\n    this.committedCards = secondNewMap;\n    // To reset timer, since modal doesn't have access to stopwatch\n    this.state.stopwatch.onClickReset();\n    // console.log(this.committedCards.get(0));\n    \n  }\n\n  // *******************************************************\n  // APIIIIIIIII STUUUUUUFFFFFFFFFFFf\n  // *******************************************************\n\n  getTime = () => {\n    //Call \"http://localhost:5000\" directly \n    // now that CORS is set up in Flask\n    // Seems like url was using losalhost, so that was causing cors issue\n\n    // Just realized that if anyone named themselves login, that would cause major issues. probably why query string is usually better\n    // Will circumvent by creating a login user with a password even I'll forget\n    console.log(this.currentName, \"name\");\n    let url = 'http://127.0.0.1:5000/user/' + this.currentName;\n    console.log(url);\n    fetch(url)\n      .then(\n         (response) => \n         {\n          console.log(\"Brooooooo\");\n          console.log(response);\n            if (response.status === 200)\n            {\n              return (response.json());\n            }\n            else\n            {\n              console.log(\"HTTP error:\" + response.status + \":\" +  response.statusText);\n              return (\"N/A\");\n            }\n         }\n      )//The promise response is returned\n      .then ((output) => \n        {\n          // console.log(\"it should be displaying now\");\n          this.updateTime(output);\n        }\n      )\n      .catch((error) => \n        {\n          console.log(error);\n        } \n      )\n\n  }\n\n  getLeaderboard = () => {\n    //Call \"http://localhost:5000\" directly \n    // now that CORS is set up in Flask\n    // Seems like url was using losalhost, so that was causing cors issue\n    fetch('http://127.0.0.1:5000/leaderboard')\n      .then(\n         (response) => \n         {\n          // console.log(response)\n            if (response.status === 200)\n            {\n              return (response.json());\n            }\n            else\n            {\n              console.log(\"HTTP error:\" + response.status + \":\" +  response.statusText);\n              return ([ [\"status \", response.status]]);\n            }\n         }\n      )//The promise response is returned, then we extract the json data\n      .then ((jsonOutput) => //jsonOutput now has result of the data extraction\n        {\n          // console.log(\"it should be displaying now\");\n          this.updateLeaderboard(jsonOutput);\n        }\n      )\n      .catch((error) => \n        {console.log(error);\n          this.updateLeaderboard(\"\");\n        } \n      )\n\n  }\n\n  // The leaderboard is going to be a single string for now, can make each position be an object if I want to\n  updateLeaderboard = (apiResponse) => {\n    // console.log(apiResponse, \"This is the response\");\n    console.log(apiResponse[0], \"This is the object\");\n\n    // Initial string\n    var display = \"\";\n\n    console.log(apiResponse.length, \"length\");\n    // For some reason, using for loop wouldn't work (when I would console.log the user, it would return a number instead)\n    for (let i = 0; i < apiResponse.length; i++){\n      let user = apiResponse[i];\n      console.log(user);\n      if (user[\"fastest_time\"] === -1){\n        display += user[\"name\"] + \": \" + \"N/A\\n\"\n      }\n      else{\n        display += user[\"name\"] + \": \" + user[\"fastest_time\"] + \" seconds\\n\"\n      }\n      \n    }\n\n    console.log(display)\n    this.setState({leaderboard: display})\n  }\n\n  updateTime = (apiResponse) => {\n    // console.log(apiResponse, \"This is the response\");\n    console.log(apiResponse, \"This is the object\");\n\n    // Initial string\n    var display = \"Fastest Time: \\n\" + apiResponse + \" seconds\";\n\n    // For some reason, using for loop wouldn't work (when I would console.log the user, it would return a number instead)\n\n    console.log(display)\n    this.setState({currentUserFastest: display})\n  }\n\n  login = (_name, _password) =>{\n    let url = 'http://127.0.0.1:5000/user/login';\n\n    let jData = JSON.stringify({\n      name: _name,\n      password: _password\n    });\n\n    fetch(url,\n      {\n        method: 'POST',\n        body: jData,\n        headers: {\"Content-type\": \"application/json; charset = UTF-8\"}\n      }\n    ).then(\n      (response) => {\n        if (response.status === 200){\n          return (response.json());\n        }\n        else{\n          return([[\"status \", response.status]]);\n        }\n      }\n    ).then((jsonOutput) => {\n      // The jsonOutput might need a name change since this should just return the session key, not a json value\n      this.setState({currentUserName: _name, currentUserKey: jsonOutput});\n      this.currentName = _name;\n      console.log(this.currentName);\n      console.log(jsonOutput, \"key\");\n\n      this.getTime();\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n\n  setFastestTime = (_name, _sessionKey, _time) =>{\n    let url = 'http://127.0.0.1:5000/user';\n\n    let jData = JSON.stringify({\n      name: _name,\n      sessionKey: _sessionKey,\n      time: _time\n    });\n\n    fetch(url,\n      {\n        method: 'PUT',\n        body: jData,\n        headers: {\"Content-type\": \"application/json; charset = UTF-8\"}\n      }\n    ).then(\n      (response) => {\n        if (response.status === 200){\n          return (response.json());\n        }\n        else{\n          return([[\"status \", response.status]]);\n        }\n      }\n    ).then((jsonOutput) => {\n      // The jsonOutput might need a name change since this should just return the session key, not a json value\n      this.getLeaderboard();\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n\n  componentDidMount(){\n    console.log(this.getLeaderboard());\n    console.log(this.getTime())\n    // console.log(this.state.leaderboard)\n  }\n\n  // *******************************************************\n  // ENDDDDDD OFFFFFFFF APIIIIIIIII STUUUUUUFFFFFFFFFFFf\n  // *******************************************************\n\n  // The pre-wrap is there for \\n to not be disregarded since it's whitespace\n  render() {\n  return (\n    <div className=\"App\">\n      <h1>Concentration Game</h1>\n      <br></br>\n      \n      <div className=\"flex-container\">\n        <div style={{whiteSpace: \"pre-wrap\", backgroundColor: \"darkGreen\", minWidth: \"fit-content\", maxWidth: \"25%\"}}>\n          <h3>Leaderboard</h3>\n          {this.state.leaderboard}\n        </div>\n        <div style={{background: \"purple\", minWidth: \"fit-content\", whiteSpace: \"pre-wrap\"}}>\n          {this.state.currentUserFastest}\n        </div>\n        <Stopwatch initialTime={this.state.initialTime} gameOver={this.state.gameOver} restart={this.restart} callback={this.returnSelf}></Stopwatch>\n      </div>\n    \n      \n\n     \n      <BoardTable cards={this.state.cardsInfo} callback={this.handleClick}></BoardTable>\n      <RestartModal initialTime={this.state.initialTime} finalTime={this.state.finalTime} restart={this.restart} toggle= {this.turnOffRestart} login = {this.login} showModal={this.state.showRestartModal}></RestartModal>\n    </div>\n  )\n}\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}